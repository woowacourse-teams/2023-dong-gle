{"version":3,"file":"components-WritingTable-WritingTable-stories.157fe46c.iframe.bundle.js","mappings":";;;;AAyEA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;AAeA;;AAIA;;;;;;;;ACjHA;;;;;AAaA;;;;AAAA;AACA","sources":["webpack://frontend/./src/components/WritingTable/WritingTable.tsx","webpack://frontend/./src/styles/storybook.ts"],"sourcesContent":["import { MediumLogoIcon, TistoryLogoIcon } from 'assets/icons';\nimport { MAX_WIDTH } from 'constants/style';\nimport { usePageNavigate } from 'hooks/usePageNavigate';\nimport { Fragment, ReactElement, useEffect, useRef } from 'react';\nimport { styled } from 'styled-components';\nimport { Writing } from 'types/apis/writings';\nimport { Blog } from 'types/domain';\nimport { dateFormatter } from 'utils/date';\n\ntype Props = {\n  writings: Writing[];\n  categoryId: number;\n  isMobile?: boolean;\n};\n\nexport const blogIcon: Record<Blog, ReactElement> = {\n  MEDIUM: <MediumLogoIcon width='2.4rem' height='2.4rem' />,\n  TISTORY: <TistoryLogoIcon width='2.4rem' height='2.4rem' />,\n};\n\nconst WritingTable = ({ writings, categoryId, isMobile = false }: Props) => {\n  const { goWritingPage } = usePageNavigate();\n  const rowRef = useRef<HTMLTableRowElement>(null);\n\n  useEffect(() => {\n    rowRef.current?.focus();\n  }, [writings]);\n\n  return (\n    <S.WritingTableContainer summary='카테고리 내부 글 목록을 나타낸'>\n      <colgroup>\n        <col width='60%' />\n        <col width='20%' />\n        {isMobile ? null : <col width='20%' />}\n      </colgroup>\n      <thead>\n        <tr ref={rowRef} tabIndex={0}>\n          <th>글 제목</th>\n          {isMobile ? null : <th>생성 날짜</th>}\n          {isMobile ? <th>블로그</th> : <th>발행한 블로그 플랫폼</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {writings.map(({ id, title, publishedDetails, createdAt }) => (\n          <tr\n            key={id}\n            onClick={() => goWritingPage({ categoryId, writingId: id, isDeletedWriting: false })}\n            role='button'\n            tabIndex={0}\n          >\n            <td>{title}</td>\n            {isMobile ? null : <td>{dateFormatter(createdAt, 'YYYY.MM.DD.')}</td>}\n            <td>\n              <S.PublishedToIconContainer>\n                {publishedDetails.map(({ blogName }, index) => (\n                  <Fragment key={index}>{blogIcon[blogName]}</Fragment>\n                ))}\n              </S.PublishedToIconContainer>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </S.WritingTableContainer>\n  );\n};\n\nexport default WritingTable;\n\nconst S = {\n  WritingTableContainer: styled.table`\n    width: 100%;\n    padding-bottom: 8rem;\n\n    @media (max-width: ${MAX_WIDTH.mobileLarge}) {\n      padding-bottom: 4rem;\n    }\n\n    text-align: left;\n    font-size: 1.4rem;\n    table-layout: fixed;\n\n    th {\n      color: ${({ theme }) => theme.color.gray8};\n    }\n\n    tr {\n      height: 4.2rem;\n    }\n\n    td {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n\n      .publishedTo {\n        display: flex;\n        gap: 0.8rem;\n      }\n    }\n\n    th,\n    td {\n      padding: 0 1rem;\n      border: 1px solid ${({ theme }) => theme.color.gray5};\n    }\n\n    th:first-child,\n    td:first-child {\n      border-left: none;\n    }\n\n    th:last-child,\n    td:last-child {\n      border-right: none;\n    }\n\n    tbody tr:hover {\n      cursor: pointer;\n      background-color: ${({ theme }) => theme.color.gray3};\n    }\n  `,\n\n  PublishedToIconContainer: styled.div`\n    display: flex;\n    gap: 0.8rem;\n  `,\n};\n","import { styled } from 'styled-components';\n\nexport const StoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 28px;\n`;\n\nexport const StoryItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const StoryItemContainerRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n\nexport const StoryItemTitle = styled.h3`\n  color: ${({ theme }) => theme.color.gray9};\n  font-size: 12px;\n  font-weight: 400;\n  text-transform: uppercase;\n`;\n"],"names":[],"sourceRoot":""}