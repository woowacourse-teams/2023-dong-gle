{"version":3,"file":"components-common-TagInput-TagInput-stories.6aa64b49.iframe.bundle.js","mappings":";;;;AAwBA;;AAEA;;;;;;;ACoBA;;;AAGA","sources":["webpack://frontend/./src/components/@common/Tag/Tag.tsx","webpack://frontend/./src/components/@common/TagInput/TagInput.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef } from 'react';\nimport { styled } from 'styled-components';\nimport { CloseIcon } from 'assets/icons';\n\ntype Props = {\n  removable?: boolean;\n} & ComponentPropsWithoutRef<'button'>;\n\nconst Tag = ({ removable = true, children, ...rest }: Props) => {\n  return (\n    <S.Tag {...rest}>\n      #{children}\n      {removable && <CloseIcon width={14} height={14} />}\n    </S.Tag>\n  );\n};\n\nexport default Tag;\n\nconst S = {\n  Tag: styled.button`\n    display: inline-flex;\n    align-items: center;\n    padding: 0.6rem;\n    background-color: ${({ theme }) => theme.color.gray4};\n    border-radius: 8px;\n    color: ${({ theme }) => theme.color.gray8};\n    font-size: 1.2rem;\n    font-weight: 600;\n  `,\n};\n","import { styled } from 'styled-components';\nimport { useTagInput } from './useTagInput';\nimport Tag from 'components/@common/Tag/Tag';\nimport { useEffect } from 'react';\n\ntype Props = {\n  onChangeTags: (tags: string[]) => void;\n};\n\nconst TagInput = ({ onChangeTags }: Props) => {\n  const { inputValue, tags, addTag, removeLastTag, removeTag, onInputValueChange } = useTagInput();\n\n  useEffect(() => {\n    onChangeTags(tags);\n  }, [tags]);\n\n  const TagsList = () => {\n    return tags.map((tag) => (\n      <Tag key={tag} onClick={removeTag(tag)}>\n        {tag}\n      </Tag>\n    ));\n  };\n\n  return (\n    <S.TagInputContainer>\n      <TagsList />\n      <S.Input\n        value={inputValue}\n        placeholder='태그 추가'\n        onKeyUp={addTag}\n        onKeyDown={removeLastTag}\n        onChange={onInputValueChange}\n      />\n    </S.TagInputContainer>\n  );\n};\n\nexport default TagInput;\n\nconst S = {\n  TagInputContainer: styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.2rem;\n  `,\n  Input: styled.input`\n    border: none;\n    padding: 0.4rem;\n    outline-color: ${({ theme }) => theme.color.gray1};\n  `,\n};\n"],"names":[],"sourceRoot":""}