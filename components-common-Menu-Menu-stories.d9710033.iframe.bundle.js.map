{"version":3,"file":"components-common-Menu-Menu-stories.d9710033.iframe.bundle.js","mappings":";;;;;;;AA8BA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;ACYA;;;;AAOA;AAKA;AAKA;AAKA;;;AAOA;;AAEA;;;;;;;;;ACpEA;;;;;AAaA;;;;AAAA;AACA","sources":["webpack://frontend/./src/components/@common/Menu/Item.tsx","webpack://frontend/./src/components/@common/Menu/Menu.tsx","webpack://frontend/./src/styles/storybook.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  title: string;\n  handleMenuItemClick: () => void;\n  icon?: ReactElement;\n};\n\nconst Item = ({ title, handleMenuItemClick, icon }: Props) => {\n  return (\n    <S.Item>\n      <button onClick={handleMenuItemClick}>\n        {title}\n        {icon}\n      </button>\n    </S.Item>\n  );\n};\n\nexport default Item;\n\nconst S = {\n  Item: styled.li`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 4rem;\n    padding: 0 0.4rem;\n    &:not(:last-child) {\n      box-shadow: 0px 1px 0px ${({ theme }) => theme.color.gray4};\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.color.gray4};\n    }\n\n    button {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100px;\n      height: 100%;\n      margin: 0 8px;\n\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  `,\n};\n","import { PropsWithChildren } from 'react';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport { useMenu } from './useMenu';\n\ntype VerticalDirection = 'up' | 'down';\ntype HorizonDirection = 'left' | 'right';\n\ntype Props = {\n  initialIsOpen?: boolean;\n  verticalDirection?: VerticalDirection;\n  horizonDirection?: HorizonDirection;\n} & PropsWithChildren;\n\nconst Menu = ({\n  initialIsOpen = false,\n  verticalDirection = 'down',\n  horizonDirection = 'left',\n  children,\n}: Props) => {\n  const { menuRef, isOpen, toggleIsOpen } = useMenu(initialIsOpen);\n\n  return (\n    <S.Menu ref={menuRef} onClick={toggleIsOpen}>\n      {isOpen ? (\n        <S.MenuList $verticalDirection={verticalDirection} $horizonDirection={horizonDirection}>\n          {children}\n        </S.MenuList>\n      ) : null}\n    </S.Menu>\n  );\n};\n\nMenu.Item = Item;\n\nexport default Menu;\n\nconst S = {\n  Menu: styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  `,\n\n  MenuList: styled.ul<{\n    $verticalDirection: VerticalDirection;\n    $horizonDirection: HorizonDirection;\n  }>`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    ${({ $verticalDirection }) =>\n      $verticalDirection === 'up' &&\n      `\n    \tbottom: 100%;\n  \t`}\n    ${({ $verticalDirection }) =>\n      $verticalDirection === 'down' &&\n      `\n\t\t\ttop: 100%;\n  \t`}\n    ${({ $horizonDirection }) =>\n      $horizonDirection === 'right' &&\n      `\n    \tleft: 0;\n  \t`}\n\t\t${({ $horizonDirection }) =>\n      $horizonDirection === 'left' &&\n      `\n    \tright: 0;\n  \t`}\n    width: fit-content;\n\n    border: 1px solid ${({ theme }) => theme.color.gray4};\n    border-radius: 4px;\n    background-color: ${({ theme }) => theme.color.gray1};\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);\n\n    z-index: 1;\n  `,\n};\n","import { styled } from 'styled-components';\n\nexport const StoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 28px;\n`;\n\nexport const StoryItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const StoryItemContainerRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n\nexport const StoryItemTitle = styled.h3`\n  color: ${({ theme }) => theme.color.gray9};\n  font-size: 12px;\n  font-weight: 400;\n  text-transform: uppercase;\n`;\n"],"names":[],"sourceRoot":""}